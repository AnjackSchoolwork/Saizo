<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables

// used for minions only
max_detect_range = 1000 // Maximum range at which minion AI will act

// grab difficulty values
dif_low = game_controller.difficulty_levels[? "low"]
dif_med = game_controller.difficulty_levels[? "medium"]
dif_high = game_controller.difficulty_levels[? "high"]
base_atk_chance = ds_map_create()

switch(game_controller.difficulty) {
    // Difficulty-based variables:
    // base_agression: between -2 and 2, affects all behavior
    // base_speed: base move speed, modified by aggression lvl
    // min_range: closest ai will move toward opponent
    // max_range: furthest ai will move away from opponent
    // base_atk_chance: ds_map, each element is key = name of 
    //          attack with value = chance between 0 and 1
    case dif_med:
        base_agression = 1
        base_speed = 10
        min_range = 40
        max_range = 300
        ds_map_add(base_atk_chance, "low", 0.5)
        ds_map_add(base_atk_chance, "medium", 1)
        ds_map_add(base_atk_chance, "high", 1)
        ds_map_add(base_atk_chance, "combo 1", 1)
        ds_map_add(base_atk_chance, "combo 2", 0.5)
        break
    case dif_high:
        base_agression = 2
        base_speed = 15
        min_range = 40
        max_range = 200
        ds_map_add(base_atk_chance, "low", 0.25)
        ds_map_add(base_atk_chance, "medium", 0.5)
        ds_map_add(base_atk_chance, "high", 0.75)
        ds_map_add(base_atk_chance, "combo 1", 1)
        ds_map_add(base_atk_chance, "combo 2", 1)
        break
    default: // Default to low
        base_agression = 0
        base_speed = 10
        min_range = 40
        max_range = 500
        ds_map_add(base_atk_chance, "low", 1)
        ds_map_add(base_atk_chance, "medium", 1)
        ds_map_add(base_atk_chance, "high", 1)
        ds_map_add(base_atk_chance, "combo 1", 0)
        ds_map_add(base_atk_chance, "combo 2", 0)
        break
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
