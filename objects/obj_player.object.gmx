<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_placeholder_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>entity_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables

// Run parent initialization first
event_inherited()

sprite_right = spr_placeholder_player
sprite_left = spr_placeholder_player

// What input is player using?
controller = "keyboard"
gamepad_slot = undefined

// Movement variables
default_move_speed = 200

// Attack variables
// Duration in milliseconds
atk_anim_duration = 0
atk_range = 0
atk_radius = 0
atk_dmg = 0
// Heavy attack
h_atk_pressed = false
h_atk_duration = 1000
h_atk_range = 100
h_atk_radius = 100
h_atk_dmg = 20
// Medium Attack
m_atk_pressed = false
m_atk_duration = 750
m_atk_range = 75
m_atk_radius = 75
m_atk_dmg = 10
// Light Attack
l_atk_pressed = false
l_atk_duration = 250
l_atk_range = 75
l_atk_radius = 75
l_atk_dmg = 5



// Define controls
keyboard_controls = ds_map_create()
ds_map_add(keyboard_controls, "up", vk_up)
ds_map_add(keyboard_controls, "down", vk_down)
ds_map_add(keyboard_controls, "left", vk_left)
ds_map_add(keyboard_controls, "right", vk_right)
ds_map_add(keyboard_controls, "h_atk", ord('Z'))
ds_map_add(keyboard_controls, "m_atk", ord('X'))
ds_map_add(keyboard_controls, "l_atk", ord('C'))

gamepad_controls = ds_map_create()
//ds_map_add(gamepad_controls, "up", 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Do our step actions

event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
